# Installing NVIDIA OpenGL Drivers

In order to get a direct, hardware-accelerated OpenGL context in client applications, one needs to have
  - the discrete card enabled in BIOS;
  - the nvidia hardware drivers and client library installed;
  - the nvidia kernel modules loaded;
  - the X server configured to use the discrete card.

## BIOS

The BIOS setup is pretty straightforward; just hit Enter at boot, then hit F1 to enter BIOS setup, navigate to the "Config > Displays" page, and for the mode change it to "Discrete" (the others being "Integrated" and "Optimus").

## Drivers & Client Library

I'm not sure exactly which packages are involved here, but at the very minimum it's:
  * extra/nvidia (drivers)
  * extra/nvigia-libgl (client symlinks)
  * multilib/lib32-nvidia-libgl (32-bit client symlinks)

Bonus packages:
  * extra/libvdpau & multilib/lib32-libvdpau - hardware-accelerated video decoding
  * extra/nvidia-utils & multilib/lib32-nvidia-tuils - nvidia-settings application

## Kernel Modules

The `nvidia` kernel module should be loaded once rebooted after installing the `nvidia` package.

## XOrg Configuration

There's one at `/etc/X11/xorg.conf.nvidia` that looks like this:

```sh
# nvidia-xconfig: X configuration file generated by nvidia-xconfig
# nvidia-xconfig:  version 334.21  (buildmeister@swio-display-x64-rhel04-16)  Thu Feb 27 14:37:03 PST 2014
Section "Device"
    Identifier       "nvidia"
    Driver           "nvidia"
    BusID            "PCI:1:0:0"
#    VendorName       "NVIDIA Corporation"
#    Option           "ConnectedMonitor" "CRT"
EndSection
Section "ServerLayout"
    Identifier     "Layout0"
    Screen      0  "Screen0" 0 0
    InputDevice    "Keyboard0" "CoreKeyboard"
    InputDevice    "Mouse0" "CorePointer"
EndSection
Section "Files"
    ModulePath      "/usr/lib/nvidia/xorg/modules"
    ModulePath      "/usr/lib/xorg/modules"
    FontPath        "/usr/share/fonts/100dpi"
    FontPath        "/usr/share/fonts/75dpi"
    FontPath        "/usr/share/fonts/cyrillic"
    FontPath        "/usr/share/fonts/encodings"
    FontPath        "/usr/share/fonts/misc"
    FontPath        "/usr/share/fonts/TTF"
    FontPath        "/usr/share/fonts/util"
EndSection
Section "ServerFlags"
    Option         "DontZap" "true"
#    Option "DontVTSwitch" "true"
    Option         "AllowClosedownGrabs" "false"
    Option         "AllowDeactivateGrabs" "false"
EndSection
Section "InputDevice"
    # generated from default
    Identifier     "Mouse0"
    Driver         "mouse"
    Option         "Protocol" "auto"
    Option         "Device" "/dev/psaux"
    Option         "Emulate3Buttons" "no"
    Option         "ZAxisMapping" "4 5"
EndSection
Section "InputDevice"
    # generated from default
    Identifier     "Keyboard0"
    Driver         "kbd"
EndSection
Section "Monitor"
    Identifier     "Monitor0"
    VendorName     "Unknown"
    ModelName      "Unknown"
    DisplaySize     345    194
    Option         "DPMS"
EndSection
Section "Screen"
    Identifier     "Screen0"
    Device         "nvidia"
    Monitor        "Monitor0"
    DefaultDepth    24
    SubSection     "Display"
        Depth       24
        Modes      "1920x1080" "1360x768" "1280x720"
    EndSubSection
EndSection
```

# Troubleshooting

In order to determine which OpenGL implementations the server and clients are using, run

```sh
glxinfo | egrep "glx (vendor|version)"
```

If they're different, then you won't be able to get a direct OpenGL context for applications.
